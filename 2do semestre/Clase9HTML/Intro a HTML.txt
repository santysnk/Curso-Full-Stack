üåü Introducci√≥n sencilla a HTML: ¬øQu√© es?

Imagina que est√°s construyendo una casa üè†:

    HTML es la estructura b√°sica de la casa (paredes, puertas, ventanas).

    CSS (que aprender√°s m√°s adelante) ser√≠a la decoraci√≥n y pintura.

    JavaScript o TypeScript (que ya conoces) ser√≠a la electricidad, las ca√±er√≠as, y todo lo que hace que la casa funcione o "haga cosas".

En resumen, HTML le dice al navegador c√≥mo es la estructura y el contenido de tu p√°gina web.

----------------------------------------------------------------------------------------------------------------------------------------------

üìå ¬øC√≥mo funciona HTML?

HTML significa HyperText Markup Language o Lenguaje de Marcas de Hipertexto. (llamado lenguaje de etiqueteas)

Es decir:

    HyperText porque es texto con enlaces que llevan a otros textos o p√°ginas.

    Markup porque usamos etiquetas (<etiqueta>) para decirle al navegador qu√© tipo de contenido estamos mostrando.

----------------------------------------------------------------------------------------------------------------------------------------------

üß± Las etiquetas HTML: El "bloque b√°sico"

Las etiquetas son como cajas que contienen informaci√≥n.

Ejemplo simple:

    <p>Hola, mundo!</p>

  ‚Ä¢ <p>: es la etiqueta que significa p√°rrafo (como un bloque de texto).

  ‚Ä¢ El texto "Hola, mundo!" es lo que ve el usuario.

  ‚Ä¢ </p> indica el cierre de esa etiqueta o caja.

Analog√≠a:
    Imagina que etiquetas HTML son como cajones con etiquetas que indican qu√© guardas dentro (ropa, zapatos, libros). 
    El navegador abre cada etiqueta y presenta el contenido seg√∫n corresponda.

----------------------------------------------------------------------------------------------------------------------------------------------

‚öôÔ∏è Estructura b√°sica de un documento HTML

Todo documento HTML tiene esta estructura m√≠nima:

<!DOCTYPE html>                            <!-- Versi√≥n HTML que usas -->     Es como decir "este archivo sigue las reglas de HTML moderno".
<html>                                     <!-- Comienza la p√°gina -->        El contenedor principal, como la funci√≥n main() en otros lenguajes.
  <head>                                   <!-- Informaci√≥n no visible -->    Aqu√≠ va informaci√≥n "detr√°s de escena", como el t√≠tulo que aparece en la pesta√±a del navegador.
    <title>Mi primera p√°gina</title>       <!-- T√≠tulo de la pesta√±a -->
  </head>

  <body>                                 <!-- Todo lo visible -->             Aqu√≠ va todo lo que tu amigo ver√° en la pantalla, como textos o im√°genes.
    <h1>Hola, soy un t√≠tulo</h1>
    <p>¬°Y yo soy un p√°rrafo!</p>
  </body>
</html>

Analog√≠a:
    Piensa en head como la parte interna del libro (√≠ndice, datos t√©cnicos) y en body como el contenido real (cap√≠tulos e im√°genes).
    Si TypeScript tuviera un programa, el <body> ser√≠a como el console.log() que muestra algo al usuario, 
    mientras que <head> ser√≠a como las configuraciones iniciales que no se ven directamente.

----------------------------------------------------------------------------------------------------------------------------------------------

üéØ Ejemplos de etiquetas b√°sicas

Vamos a presentarle algunas etiquetas b√°sicas con ejemplos que pueda probar.

    T√≠tulos (<h1> a <h6>):

        Son como encabezados en un documento de Word, de m√°s grande (h1) a m√°s peque√±o (h6).
        Ejemplo:

            <h1>Mi t√≠tulo principal</h1>
            <h2>Un subt√≠tulo</h2>


P√°rrafos (<p>):

    Para texto normal, como el cuerpo de un correo.
    Ejemplo:
    
            <p>Este es mi primer p√°rrafo. ¬°Es f√°cil!</p>

Enlaces (<a>):

    Como un bot√≥n en TypeScript que lleva a otro lugar.
    Ejemplo:
   
        <a href="https://google.com">Haz clic aqu√≠</a>           <!-- href es como un par√°metro que le dice a d√≥nde ir.  --> 
        

Im√°genes (<img>):

    No necesita cerrar la etiqueta, es como un return r√°pido en una funci√≥n.
    Ejemplo:
   
        <img src="https://i.imgur.com/abc123.jpg" alt="Un perrito">     <!-- src es la URL de la imagen, alt es una descripci√≥n por si no carga.  --> 

    